AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31
- AWS::CodeStar

Parameters:
  ProjectId:
    Type: String
    Description: AWS CodeStar projectID used to associate new resources to team members

# Enable blue/green deployments using this Globals section. For instructions, see the AWS CodeStar User Guide:
# https://docs.aws.amazon.com/codestar/latest/userguide/how-to-modify-serverless-project.html?icmpid=docs_acs_rm_tr
#
# Globals:
#   Function:
#     AutoPublishAlias: live
#     DeploymentPreference:
#       Enabled: true
#       Type: Canary10Percent5Minutes

Resources:
  GetHelloWorld:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.aws.codestar.projecttemplates.handler.HelloWorldHandler
      Runtime: java8
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /
            Method: get

  PostHelloWorld:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.aws.codestar.projecttemplates.handler.HelloWorldHandler
      Runtime: java8
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        PostEvent:
          Type: Api
          Properties:
            Path: /
            Method: post

  AddLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.aws.codestar.projecttemplates.handler.Calculator::add
      Runtime: java8
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]

  UserLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.aws.codestar.projecttemplates.handler.UserServiceHandler::saveUser
      Runtime: java8
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]






#  KinesisStreamReaderLambdaRole:
#    Type: AWS::IAM::Role
#    Properties:
#      AssumeRolePolicyDocument:
#        Version: '2012-10-17'
#        Statement:
#        -
#          Effect: Allow
#          Principal:
#            Service: lambda.amazonaws.com
#          Action: sts:AssumeRole
#      Path: '/'
#      Policies:
#      -
#        PolicyName: lambda-policy
#        PolicyDocument:
#          Version: '2012-10-17'
#          Statement:
#          -
#            Effect: Allow
#            Action:
#            - 'kinesis:*'
#            Resource: '*'

  KinesisStreamReaderLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.aws.codestar.projecttemplates.handler.KinesisStreamReader::handle
      Runtime: java8
      Timeout: 120
      MemorySize: 256
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]


  KinesisStreamReaderLambdaMapping:
    Type: "AWS::Lambda::EventSourceMapping"
    Properties:
      BatchSize: 10
      Enabled: true
      EventSourceArn: arn:aws:kinesis:us-east-1:577962240200:stream/reko_result
      FunctionName: !GetAtt  KinesisStreamReaderLambda.Arn
      StartingPosition: "TRIM_HORIZON"


#  RekognitionLambdaRole:
#    Type: AWS::IAM::Role
#    Properties:
#      AssumeRolePolicyDocument:
#        Version: '2012-10-17'
#        Statement:
#        -
#          Effect: Allow
#          Principal:
#            Service: lambda.amazonaws.com
#          Action: sts:AssumeRole
#      Path: '/'
#      Policies:
#      -
#        PolicyName: lambda-comprehend-policy
#        PolicyDocument:
#          Version: '2012-10-17'
#          Statement:
#          -
#            Effect: Allow
#            Action:
#            - 'kinesis:*'
#            Resource: '*'
#          -
#            Effect: Allow
#            Action:
#            - 'kinesisvideo:*'
#            Resource: '*'
#          -
#            Effect: Allow
#            Action:
#            - 'rekognition:*'
#            Resource: '*'


  RekognitionLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.aws.codestar.projecttemplates.handler.RekognitionLambda::handle
      Runtime: java8
      Timeout: 120
      MemorySize: 256
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]

  UserDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: "id"
        AttributeType: "S"
      KeySchema:
      - AttributeName: "id"
        KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      TableName: "UserTable"